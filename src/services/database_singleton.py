"""
Singleton –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è PostgreSQLDatabaseService.
–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤–æ –≤—Å–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
"""

import threading
import logging
from typing import Optional

logger = logging.getLogger(__name__)

class DatabaseServiceSingleton:
    """
    Singleton –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è PostgreSQLDatabaseService.
    –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î.
    """
    
    _instance: Optional['DatabaseServiceSingleton'] = None
    _service: Optional['PostgreSQLDatabaseService'] = None
    _lock = threading.Lock()
    
    def __new__(cls):
        """–°–æ–∑–¥–∞–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä Singleton."""
        if cls._instance is None:
            with cls._lock:
                # –î–≤–æ–π–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                if cls._instance is None:
                    cls._instance = super().__new__(cls)
                    logger.info("üîß –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä DatabaseServiceSingleton")
        return cls._instance
    
    def get_service(self) -> 'PostgreSQLDatabaseService':
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä PostgreSQLDatabaseService.
        
        Returns:
            PostgreSQLDatabaseService: –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –ë–î
        """
        if self._service is None:
            with self._lock:
                # –î–≤–æ–π–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                if self._service is None:
                    from src.services.postgresql_database_service import PostgreSQLDatabaseService
                    self._service = PostgreSQLDatabaseService()
                    logger.info("‚úÖ –°–æ–∑–¥–∞–Ω –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä PostgreSQLDatabaseService")
        
        return self._service
    
    def reset_service(self):
        """
        –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–µ—Ä–≤–∏—Å (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è).
        –û–°–¢–û–†–û–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏!
        """
        with self._lock:
            if self._service:
                logger.warning("‚ö†Ô∏è –°–±—Ä–æ—Å PostgreSQLDatabaseService singleton")
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
                self._service = None

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
def get_database_service() -> 'PostgreSQLDatabaseService':
    """
    –ü–æ–ª—É—á–∞–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä PostgreSQLDatabaseService.
    
    Returns:
        PostgreSQLDatabaseService: –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –ë–î
    """
    singleton = DatabaseServiceSingleton()
    return singleton.get_service()

